{"version":3,"sources":["services/requests.js","components/RightPanel/RightPanel.js","components/Wheel/Wheel.js","components/Theme/Theme.js","components/QuestionPanel/QuestionPanel.js","components/Egg/Egg.js","components/App.js","components/AppWithDb.js","index.js"],"names":["url","a","fetch","method","headers","res","ok","Error","status","json","PanelBlock","styled","div","RightPanel","attempts","score","questions","toogleEasterEgg","maxPoin","reduce","accum","point","onClick","WheelBlock","Wheel","db","rotate","handleClickWheel","offset","RenderWheel","circs","map","item","i","n","sectorWidth","Math","PI","length","className","style","transform","r","cx","cy","strokeDasharray","x","y","viewBox","preserveAspectRatio","ThemeBlock","H2","h2","select","Theme","them","color","textAlign","fadeIn","keyframes","WrapQuestion","Question","Answers","Answer","state","active","correct","cssText","css","Button","button","QuestionPanel","selectThem","responseProcessing","changeOfScene","levelQuestion","setLevelQuestion","questObjs","useState","floor","random","question","answer","correctAnswer","setState","activeTab","setActiveTab","Context","onError","MathJax","error","console","warn","log","Hub","Queue","Typeset","script","options","asciimath2jax","useMathMLspacing","delimiters","preview","Text","text","selectTab","jumps","EggBlock","Egg","window","addEventListener","event","clientWidth","document","documentElement","fontSize","AppBlock","Main","App","setRotate","setSelect","leftSideStatus","setLeftSideStatus","setScore","setAttempts","wasRotate","setWasRotate","animated","setAnimated","useEffect","s","round","MainPanel","e","preventDefault","stopPropagation","der","turn","start","turnDifference","requestAnimationFrame","animation","time","passed","lineProgress","progres","animationRotate","leftSide","stateResponse","AppWithDb","loading","setLoading","setDb","getData","process","then","catch","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d12a3c7.chunk.js","sourcesContent":["async function postData(url, body) {\r\n    let response = await fetch(url, {\r\n                                    method: 'POST',\r\n                                    body\r\n                                });\r\n    if (!response.ok){\r\n        \r\n        throw (`POST Erorr url:${url}  status:${response.status}`);\r\n    }\r\n    return await response.text();\r\n\r\n}\r\n\r\nasync function getData(url){\r\n    const res = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n    });\r\n    if(!res.ok){\r\n        throw new Error(`could not feth ${url}, status:${res.status}` );\r\n    }\r\n    return await res.json();\r\n    \r\n}\r\n\r\nexport {postData,getData};\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PanelBlock = styled.div`\r\n    background: #181414 ;\r\n    display:flex ;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%;   \r\n    text-align:center;\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n    user-select: none;\r\n    z-index: 1;\r\n\r\n`;\r\n\r\nfunction RightPanel ({attempts, score, questions, toogleEasterEgg}) {\r\n\r\n    const maxPoin = questions.reduce((accum, {point})=> accum+point, 0)\r\nreturn ( \r\n    <PanelBlock>\r\n        <h1>Попыток</h1>\r\n        <h2>{attempts}</h2>\r\n        <h1> Максимум балов</h1>\r\n        <h2>{maxPoin}</h2>\r\n        <h1> Набрано</h1>\r\n        <h2>{score}</h2>\r\n        <span onClick={toogleEasterEgg}>Aaaa!!Что здесь происходит!??</span>\r\n\r\n    </PanelBlock>\r\n)\r\n}\r\n\r\nexport default RightPanel;","import React  from 'react';\r\nimport styled from 'styled-components';\r\nimport './Wheel.scss';\r\n\r\n\r\n\r\nconst WheelBlock = styled.div`\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\n\r\nsvg {\r\n    width: 27vw;\r\n    height:27vw;\r\n}\r\n`\r\n\r\nfunction Wheel({db,rotate, handleClickWheel , offset}) {\r\n\r\n\r\n\r\n        \r\n\r\n\r\n    function RenderWheel() {\r\n        const circs =  db.map((item, i)=>{\r\n            const n = i+1,\r\n                  sectorWidth = 2*Math.PI*25/db.length;\r\n            return (\r\n                <g className={\"g\" + n } key= {i} style={{transform: `rotate(${offset*i}deg)`}}> \r\n                    <circle className=\"sector\" r=\"25\" cx=\"50\" cy=\"50\"\r\n                    strokeDasharray={`${sectorWidth}, 157.07963267948966\r\n                    `} />\r\n                    <text x=\"84\" y=\"50\" style={{transform: `rotate(${offset*0.66 }deg)`}}>{n}</text>  \r\n\r\n                </g>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <span className=\"circWrap\">\r\n                <svg    viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid meet\" style={{transform: `rotate(${rotate}deg)`}}>\r\n                {circs}\r\n            </svg>\r\n            </span>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <WheelBlock onClick={handleClickWheel} >\r\n            <span  className='wrapper'>\r\n                <RenderWheel/> \r\n                <span className=\"arrow-7\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n\r\n                </span>     \r\n            </span>\r\n                \r\n        </WheelBlock>\r\n           \r\n    )\r\n}\r\n\r\n\r\nexport default Wheel;","import React  from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemeBlock = styled.div`\r\nborder: 1px solid rgba(0,0,0,0.2);\r\nborder-radius: 8px;\r\nbackground: rgba(0,0,0,0.3);\r\npadding: 5%;\r\nbox-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n\r\n\r\n`\r\nconst H2 = styled.h2`\r\nfont-size: 1.2rem;\r\ncolor: ${({select})=> select? 'red': null};\r\n`\r\n\r\nfunction Theme ({db, select}) {\r\n    \r\n\r\n    function renderThems() {\r\n        if(!db){\r\n            return <h2 style={{\r\n                color:'red',\r\n                textAlign: \"center\"}} \r\n                >Отсуцтвует база данных</h2>\r\n        } else {\r\n            return db.map(({them}, i) => {\r\n                if(i === select){\r\n                    return <H2 select  key={i}>{them}</H2>\r\n                }\r\n               return <H2 key={i}>{them}</H2>\r\n            })\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <ThemeBlock>\r\n           { renderThems()}\r\n        </ThemeBlock>\r\n    )\r\n\r\n}\r\n\r\nexport default Theme;","import React, { useState} from 'react';\r\nimport MathJax from 'react-mathjax2'\r\n\r\nimport styled, {keyframes, css} from 'styled-components';\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    transform: scale(0,0)\r\n  }\r\n  100% {\r\n    transform: scale(100%,100%)\r\n  }\r\n`\r\n\r\nconst WrapQuestion = styled.div`\r\n    padding: 2%;\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%;\r\n    margin: 0 5%;    \r\n    animation: ${fadeIn} 1s;\r\n    user-select: none;\r\n\r\n\r\n`;\r\n\r\nconst Question = styled.div`\r\n    border: 1px solid rgba(0,0,0,0.2);\r\n    border-radius: 8px;\r\n    background: rgba(0,0,0,0.3);\r\n    padding: 2%;\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n    width:100%;\r\n    height:100%;\r\n\r\n`\r\nconst Answers = styled.div`\r\n\r\n\r\n    padding: 5%;\r\n\r\n    width:100%;\r\n    height:100%;\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n`\r\nconst Answer = styled.div`\r\n    border: 1px solid rgba(0,0,0,0.2);\r\n    border-radius: 8px;\r\n    background: rgba(0,0,0,0.3);\r\n    padding: 2%;\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n    width:40%;\r\n    height:50%;\r\n    display:grid;\r\n    place-content: center;\r\n\r\n    &:nth-child(1) {\r\n        margin-bottom: 2%;\r\n    }\r\n    &:nth-child(2) {\r\n        margin-bottom: 2%;\r\n    }\r\n    span{\r\n        text-align: center;\r\n        font-size: 20px;\r\n    }\r\n    ${({state,active, correct})=> {\r\n        let cssText ='';\r\n        if(state === 'chose' && !active){\r\n            cssText += css`\r\n            &:hover{\r\n                border-color:#BB968D;\r\n            }\r\n            `\r\n        }\r\n        if(active&& state === 'chose') {\r\n            cssText += css`\r\n                border-color:#ed785b    ;\r\n            `\r\n        }\r\n        if(correct&&(state === \"correct\"|| state === \"wrong\" )) {\r\n            cssText += css`\r\n                border-color:#229756    ;\r\n            `\r\n        }\r\n        if(active&& state === \"wrong\") {\r\n            cssText += css`\r\n                border-color:#e52b50    ;\r\n            `\r\n        }\r\n        return cssText\r\n    }}\r\n`\r\nconst Button = styled.button`\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5);    \r\n    position:absolute;\r\n    left:50%;\r\n    top:50%;\r\n    transform:translate(-50%,-50%);\r\n    border: 1px solid rgba(0,0,0,0.2);\r\n    font: inherit;\r\n    color: inherit;\r\n    outline:none;\r\n    border-radius: 4px;\r\n    background: #d53e07;\r\n    color:#5A092A;\r\n    padding: 4px 8px;\r\n    font-weight: 800;\r\n    text-align: center;\r\n    &:hover{\r\n        background-color: #aa3206;\r\n    }\r\n`\r\n\r\nfunction QuestionPanel({selectThem: {them, questions}, responseProcessing, changeOfScene,levelQuestion, setLevelQuestion}) {\r\n    const {point, questions: questObjs} = questions[levelQuestion]\r\n    const [numderQustion] = useState(Math.floor(Math.random()*questObjs.length) )\r\n    const {question, answer, correctAnswer} = questObjs[numderQustion];\r\n    const [state, setState] = useState('chose')\r\n    const [activeTab, setActiveTab] = useState();\r\n\r\n    function handleClick() {\r\n        if (state === 'chose'){\r\n            if(!activeTab &&activeTab!==0){\r\n                return\r\n            }\r\n            if(activeTab===correctAnswer){\r\n                setState('correct')\r\n\r\n                responseProcessing('correct', point)\r\n\r\n            }\r\n            if(activeTab!==correctAnswer){\r\n                setState('wrong')\r\n                responseProcessing('wrong',point)\r\n            }\r\n        } else {\r\n            setLevelQuestion((levelQuestion)=>levelQuestion+1);\r\n            changeOfScene()\r\n            \r\n        }\r\n\r\n    }\r\n    function selectTab(i) {\r\n        if(state==='chose') {\r\n            setActiveTab(i);\r\n        }\r\n    }\r\n    function renderAnswer() {\r\n        return answer.map((item, i) => {\r\n            let active = (activeTab === i);\r\n            let correct = (correctAnswer === i);\r\n\r\n            return (\r\n            <Answer onClick={()=>selectTab(i)} correct={correct} state ={state} active={active}>\r\n                       <span><MathJax.Text text={ item }/></span>\r\n                   </Answer  >\r\n            )   \r\n        })\r\n    }\r\n\r\n    return (\r\n        (\r\n            <MathJax.Context\r\n            \r\n            \r\n            onError={ (MathJax, error) => {\r\n                console.warn(error);\r\n                console.log(\"Encountered a MathJax error, re-attempting a typeset!\");\r\n                MathJax.Hub.Queue(\r\n                  MathJax.Hub.Typeset()\r\n                );\r\n            } }\r\n            script=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML\"\r\n            options={ {\r\n                asciimath2jax: {\r\n                     useMathMLspacing: true,\r\n                     delimiters: [[\"$$\",\"$$\"]],\r\n                     preview: \"none\",\r\n                }\r\n            } }\r\n        >\r\n            <WrapQuestion>\r\n               <Question>\r\n                   <h2>Тема: {them}</h2>\r\n        <h2>Вопрос на {point} балл:  <MathJax.Text text={ question }/> </h2>\r\n               </Question>\r\n               <Answers>\r\n                    {renderAnswer()}\r\n                    <Button onClick={handleClick}>{state===\"chose\"?\"Ответить\":\"Дальше\"}</Button>\r\n               </Answers>\r\n            </WrapQuestion>\r\n        </MathJax.Context>\r\n            \r\n        )\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default QuestionPanel;","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\nconst jumps = keyframes`\r\n   0%,\r\n  60%,\r\n  75%,\r\n  90%,\r\n  to {\r\n    -webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\r\n    animation-timing-function: cubic-bezier(.215, .61, .355, 1)\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    -webkit-transform: translate(2000px, 0);\r\n    transform: translate(2000px, 0) ;\r\n  }\r\n\r\n\r\n\r\n  to {\r\n    -webkit-transform: translate(0);\r\n    transform: translate(0);\r\n  }\r\n`\r\n\r\nconst EggBlock = styled.div`\r\npadding: 2%;\r\nwidth: 100%;\r\nheight: 100%;\r\nanimation: ${jumps} 1s;\r\nborder: 1px solid rgba(0,0,0,0.2);\r\nborder-radius: 8px;\r\nbackground: rgba(0,0,0,0.3);\r\npadding: 5%;\r\nbox-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\ndisplay: flex;\r\nalign-items:center;\r\n\r\n`;\r\n\r\nfunction Egg({toogleEasterEgg}) {\r\n\r\n    return (\r\n        <EggBlock onClick={toogleEasterEgg}>\r\n            <h1>Здравствуй искатель. Тебе попала уникальная вещь, возможность узнать на что ты способен как маленький мыслитель, а может и великий. Опробуй свои силы, вдруг весь мир для тебя всего лишь небольшая ступень, и ты способен прогибать само мироздание под себя...</h1>\r\n        </EggBlock>\r\n    )\r\n}\r\n\r\nexport default Egg; ","import React, { useEffect, useState} from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport RightPanel from './RightPanel/RightPanel';\nimport Wheel from './Wheel/Wheel';\nimport Theme from './Theme/Theme';\nimport QuestionPanel from './QuestionPanel/QuestionPanel';\nimport Egg from './Egg/Egg';\n\nwindow.addEventListener(`resize`, event => {\n  const clientWidth = document.documentElement.clientWidth\n\n  document.documentElement.style.fontSize = clientWidth / 84 + 'px'\n});\n\nconst AppBlock = styled.div`\ndisplay:grid;\ngrid-template-columns: 1fr minmax(80px, 15%);\nheight: 100vh;\n`;\n\nconst jumps = keyframes`\n   0%,\n  60%,\n  75%,\n  90%,\n  to {\n    -webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n    animation-timing-function: cubic-bezier(.215, .61, .355, 1)\n  }\n\n  0% {\n    opacity: 0;\n    -webkit-transform: translate3d(0, -3000px, 0) scaleY(3);\n    transform: translate3d(0, -3000px, 0) scaleY(3)\n  }\n\n  60% {\n    opacity: 1;\n    -webkit-transform: translate3d(0, 25px, 0) scaleY(.9);\n    transform: translate3d(0, 25px, 0) scaleY(.9)\n  }\n\n  75% {\n    -webkit-transform: translate3d(0, -10px, 0) scaleY(.95);\n    transform: translate3d(0, -10px, 0) scaleY(.95)\n  }\n\n  90% {\n    -webkit-transform: translate3d(0, 5px, 0) scaleY(.985);\n    transform: translate3d(0, 5px, 0) scaleY(.985)\n  }\n\n  to {\n    -webkit-transform: translateZ(0);\n    transform: translateZ(0)\n  }\n`\n\nconst Main = styled.div`\npadding: 2%;\ndisplay:grid;\ngrid-template-columns: minmax(100px, 25%) 1fr;\nheight: 100%;\nanimation: ${jumps} 1s;\n\n`;\n\n\n\n\nfunction App({db}) {\n\n\n\n  const  offset = 360/db.length;\n  const [rotate, setRotate] = useState(-offset/2)\n  const [select, setSelect] = useState(0)\n  const [leftSideStatus,setLeftSideStatus] = useState('wheel')\n  const [score, setScore] = useState(0)\n  const [attempts, setAttempts] = useState(db[select].questions.length)\n  const [wasRotate, setWasRotate] = useState(false)\n  const [levelQuestion, setLevelQuestion] = useState(0)\n  const [animated, setAnimated] = useState(false)\n\n\n\n\n\n\n\n  useEffect(()=>{\n    let s = Math.round(-((rotate+offset/2)%360)/(offset))\n    if(s === 8) {\n        s = 0\n    }\n    setSelect(s)\n  },[rotate])\n  \n  function animationRotate( ) {\n    setAnimated(true)\n    let der = 2000 + Math.floor(3000* Math.random());\n    const turn = 1000 + Math.floor(3000* Math.random());\n     der =turn*2\n    let start = null,\n        turnDifference = 0;\n    function animation(time) {\n      if (!start){\n        start = time;\n      }\n      let passed =  time - start ,\n      lineProgress = passed/der;\n      const progres = lineProgress +  lineProgress**2*(1-lineProgress);\n\n      setRotate((rotate)=>rotate - (Math.floor( progres*turn) - turnDifference) );\n      turnDifference =  Math.floor( progres*turn)\n\n      if(passed <= der) {\n          requestAnimationFrame(animation)\n      } else{\n        start = null;\n        setWasRotate(true)\n        setAnimated(false)\n      }\n    }\n    requestAnimationFrame(animation)\n  } \n\n  function handleClickWheel(e) {\n    e.preventDefault()\n    e.stopPropagation()\n    if(wasRotate) {\n      if(levelQuestion<db[select].questions.length){\n        changeOfScene()\n      }\n      setWasRotate(false)\n    } else {\n      if(!animated) {\n        animationRotate();\n\n      }\n    }\n  }\n\n  function responseProcessing(stateResponse, point){\n      if(stateResponse === 'correct') {\n        setScore((score)=>score+point)\n        setAttempts((attempts)=>attempts-1)\n      } else if(stateResponse === 'wrong') {\n        setAttempts((attempts)=>attempts-1)\n      }\n      \n  }\n  function changeOfScene() {\n    setLeftSideStatus(leftSideStatus=> {\n      if(leftSideStatus ==='wheel'){ \n        return 'question'\n      } else if(leftSideStatus ==='question') {\n        return 'wheel'\n      }\n    })\n  }\n  function toogleEasterEgg(){\n    setLeftSideStatus(leftSideStatus=> {\n      if(leftSideStatus ==='wheel'){ \n        return 'easterEgg'\n      } else if(leftSideStatus ==='easterEgg') {\n        return 'wheel'\n      }\n    })\n  }\n  \n  const MainPanel = (\n      <Main>\n        <Theme db={db} select={select}/>\n        <Wheel \n            handleClickWheel = {handleClickWheel} \n            db={db} rotate={rotate} \n            offset={offset}\n\n            />\n      </Main>\n  )\n\n\n  const leftSide = leftSideStatus === 'easterEgg'? \n    <Egg toogleEasterEgg = {toogleEasterEgg}/> : \n    leftSideStatus === 'wheel'? \n    MainPanel:\n    <QuestionPanel \n      selectThem ={db[select]}\n      responseProcessing={responseProcessing}\n      changeOfScene={changeOfScene}\n      levelQuestion={levelQuestion}\n      setLevelQuestion={setLevelQuestion}/>;\n\n\n  return (\n    <AppBlock>\n      <div>{leftSide}</div>\n      <RightPanel \n        score={score}\n        attempts={attempts}\n        questions = {db[select].questions}\n        toogleEasterEgg={toogleEasterEgg}/>\n    </AppBlock>\n  );\n\n  \n}\n\nexport default App;","import React, { useEffect, useState} from 'react';\r\nimport {getData} from '../services/requests';\r\nimport App from './App';\r\n\r\n\r\nfunction AppWithDb() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [db, setDb] = useState(true);\r\n    useEffect(()=>{\r\n        getData(process.env.PUBLIC_URL\r\n            +'/db.json')\r\n            .then((res)=> {\r\n                setDb(res);\r\n                setLoading(false);\r\n            })\r\n            .catch((e)=> console.error(e));\r\n    },[]);\r\n\r\n    if(loading) {\r\n        return null;\r\n    } else {\r\n        return <App db={db} />\r\n    }\r\n\r\n}\r\n\r\nexport default AppWithDb;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWithDb from './components/AppWithDb';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWithDb />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}