{"version":3,"sources":["services/requests.js","components/RightPanel/RightPanel.js","components/Wheel/Wheel.js","components/Theme/Theme.js","components/QuestionPanel/QuestionPanel.js","components/Egg/Egg.js","components/App.js","components/AppWithDb.js","index.js"],"names":["url","a","fetch","method","headers","res","ok","Error","status","json","PanelBlock","styled","div","RightPanel","attempts","score","questions","toogleEasterEgg","maxPoin","reduce","accum","point","style","cursor","onClick","WheelBlock","Wheel","db","rotate","handleClickWheel","offset","RenderWheel","circs","map","item","i","n","sectorWidth","Math","PI","length","className","transform","r","cx","cy","strokeDasharray","x","y","viewBox","preserveAspectRatio","ThemeBlock","H2","h2","select","Theme","them","color","textAlign","fadeIn","keyframes","WrapQuestion","Question","Answers","Answer","state","active","correct","cssText","css","Button","button","QuestionPanel","selectThem","responseProcessing","changeOfScene","levelQuestion","setLevelQuestion","questObjs","useState","floor","random","question","answer","correctAnswer","setState","activeTab","setActiveTab","Context","onError","MathJax","error","console","warn","log","Hub","Queue","Typeset","script","options","asciimath2jax","useMathMLspacing","delimiters","preview","Text","text","selectTab","jumps","EggBlock","Egg","window","addEventListener","event","clientWidth","document","documentElement","fontSize","AppBlock","Main","App","setRotate","setSelect","leftSideStatus","setLeftSideStatus","setScore","setAttempts","wasRotate","setWasRotate","animated","setAnimated","useEffect","s","round","MainPanel","e","preventDefault","stopPropagation","der","turn","start","turnDifference","requestAnimationFrame","animation","time","passed","lineProgress","progres","animationRotate","leftSide","stateResponse","AppWithDb","loading","setLoading","setDb","getData","process","then","catch","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5b207808.chunk.js","sourcesContent":["async function postData(url, body) {\r\n    let response = await fetch(url, {\r\n                                    method: 'POST',\r\n                                    body\r\n                                });\r\n    if (!response.ok){\r\n        \r\n        throw (`POST Erorr url:${url}  status:${response.status}`);\r\n    }\r\n    return await response.text();\r\n\r\n}\r\n\r\nasync function getData(url){\r\n    const res = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n    });\r\n    if(!res.ok){\r\n        throw new Error(`could not feth ${url}, status:${res.status}` );\r\n    }\r\n    return await res.json();\r\n    \r\n}\r\n\r\nexport {postData,getData};\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PanelBlock = styled.div`\r\n    background: #181414 ;\r\n    display:flex ;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%;   \r\n    text-align:center;\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n    user-select: none;\r\n    z-index: 1;\r\n\r\n`;\r\n\r\nfunction RightPanel ({attempts, score, questions, toogleEasterEgg}) {\r\n\r\n    const maxPoin = questions.reduce((accum, {point})=> accum+point, 0)\r\nreturn ( \r\n    <PanelBlock>\r\n        <h1>Спроб</h1>\r\n        <h2>{attempts}</h2>\r\n        <h1> Максимум балів</h1>\r\n        <h2>{maxPoin}</h2>\r\n        <h1> Набрано</h1>\r\n        <h2>{score}</h2>\r\n        <span style={{cursor: \"pointer\"}} onClick={toogleEasterEgg}>^_^</span>\r\n\r\n    </PanelBlock>\r\n)\r\n}\r\n\r\nexport default RightPanel;","import React  from 'react';\r\nimport styled from 'styled-components';\r\nimport './Wheel.scss';\r\n\r\n\r\n\r\nconst WheelBlock = styled.div`\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\n\r\nsvg {\r\n    width: 27vw;\r\n    height:27vw;\r\n}\r\n`\r\n\r\nfunction Wheel({db,rotate, handleClickWheel , offset}) {\r\n\r\n\r\n\r\n        \r\n\r\n\r\n    function RenderWheel() {\r\n        const circs =  db.map((item, i)=>{\r\n            const n = i+1,\r\n                  sectorWidth = 2*Math.PI*25/db.length;\r\n            return (\r\n                <g className={\"g\" + n } key= {i} style={{transform: `rotate(${offset*i}deg)`}}> \r\n                    <circle className=\"sector\" r=\"25\" cx=\"50\" cy=\"50\"\r\n                    strokeDasharray={`${sectorWidth}, 157.07963267948966\r\n                    `} />\r\n                    <text x=\"84\" y=\"50\" style={{transform: `rotate(${offset*0.66 }deg)`}}>{n}</text>  \r\n\r\n                </g>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <span className=\"circWrap\">\r\n                <svg    viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid meet\" style={{transform: `rotate(${rotate}deg)`}}>\r\n                {circs}\r\n            </svg>\r\n            </span>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <WheelBlock onClick={handleClickWheel} >\r\n            <span  className='wrapper'>\r\n                <RenderWheel/> \r\n                <span className=\"arrow-7\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n\r\n                </span>     \r\n            </span>\r\n                \r\n        </WheelBlock>\r\n           \r\n    )\r\n}\r\n\r\n\r\nexport default Wheel;","import React  from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ThemeBlock = styled.div`\r\nborder: 1px solid rgba(0,0,0,0.2);\r\nborder-radius: 8px;\r\nbackground: rgba(0,0,0,0.3);\r\npadding: 5%;\r\nbox-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n\r\n\r\n`\r\nconst H2 = styled.h2`\r\nfont-size: 1.2rem;\r\ncolor: ${({select})=> select? 'red': null};\r\n`\r\n\r\nfunction Theme ({db, select}) {\r\n    \r\n\r\n    function renderThems() {\r\n        if(!db){\r\n            return <h2 style={{\r\n                color:'red',\r\n                textAlign: \"center\"}} \r\n                >Отсуцтвует база данных</h2>\r\n        } else {\r\n            return db.map(({them}, i) => {\r\n                if(i === select){\r\n                    return <H2 select  key={i}>{them}</H2>\r\n                }\r\n               return <H2 key={i}>{them}</H2>\r\n            })\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <ThemeBlock>\r\n           { renderThems()}\r\n        </ThemeBlock>\r\n    )\r\n\r\n}\r\n\r\nexport default Theme;","import React, { useState} from 'react';\r\nimport MathJax from 'react-mathjax2'\r\n\r\nimport styled, {keyframes, css} from 'styled-components';\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    transform: scale(0,0)\r\n  }\r\n  100% {\r\n    transform: scale(100%,100%)\r\n  }\r\n`\r\n\r\nconst WrapQuestion = styled.div`\r\n    padding: 2%;\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%;\r\n    margin: 0 5%;    \r\n    animation: ${fadeIn} 1s;\r\n    user-select: none;\r\n\r\n\r\n`;\r\n\r\nconst Question = styled.div`\r\n    border: 1px solid rgba(0,0,0,0.2);\r\n    border-radius: 8px;\r\n    background: rgba(0,0,0,0.3);\r\n    padding: 2%;\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n    width:100%;\r\n    height:100%;\r\n    h2 {\r\n        margin: 1% auto;\r\n    }\r\n\r\n`\r\nconst Answers = styled.div`\r\n\r\n\r\n    padding: 5%;\r\n\r\n    width:100%;\r\n    height:100%;\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n`\r\nconst Answer = styled.div`\r\n    border: 1px solid rgba(0,0,0,0.2);\r\n    border-radius: 8px;\r\n    background: rgba(0,0,0,0.3);\r\n    padding: 2%;\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n    width:42%;\r\n    height:50%;\r\n    display:grid;\r\n    place-content: center;\r\n    overflow: hidden;\r\n\r\n    &:nth-child(1) {\r\n        margin-bottom: 2%;\r\n    }\r\n    &:nth-child(2) {\r\n        margin-bottom: 2%;\r\n    }\r\n    span{\r\n        text-align: center;\r\n        font-size: 1.4rem;\r\n    }\r\n    ${({state,active, correct})=> {\r\n        let cssText ='';\r\n        if(state === 'chose' && !active){\r\n            cssText += css`\r\n            &:hover{\r\n                border-color:#BB968D;\r\n            }\r\n            `\r\n        }\r\n        if(active&& state === 'chose') {\r\n            cssText += css`\r\n                border-color:#ed785b    ;\r\n            `\r\n        }\r\n        if(correct&&(state === \"correct\"|| state === \"wrong\" )) {\r\n            cssText += css`\r\n                border-color:#229756    ;\r\n            `\r\n        }\r\n        if(active&& state === \"wrong\") {\r\n            cssText += css`\r\n                border-color:#e52b50    ;\r\n            `\r\n        }\r\n        return cssText\r\n    }}\r\n`\r\nconst Button = styled.button`\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5);    \r\n    position:absolute;\r\n    left:50%;\r\n    top:50%;\r\n    transform:translate(-50%,-50%);\r\n    border: 1px solid rgba(0,0,0,0.2);\r\n    font: inherit;\r\n    color: inherit;\r\n    outline:none;\r\n    border-radius: 4px;\r\n    background: #d53e07;\r\n    color:#5A092A;\r\n    padding: 4px 8px;\r\n    font-weight: 800;\r\n    text-align: center;\r\n    &:hover{\r\n        background-color: #aa3206;\r\n    }\r\n`\r\n\r\nfunction QuestionPanel({selectThem: {them, questions}, responseProcessing, changeOfScene,levelQuestion, setLevelQuestion}) {\r\n    const {point, questions: questObjs} = questions[levelQuestion]\r\n    const [numderQustion] = useState(Math.floor(Math.random()*questObjs.length) )\r\n    const {question, answer, correctAnswer} = questObjs[numderQustion];\r\n    const [state, setState] = useState('chose')\r\n    const [activeTab, setActiveTab] = useState();\r\n\r\n    function handleClick() {\r\n        if (state === 'chose'){\r\n            if(!activeTab &&activeTab!==0){\r\n                return\r\n            }\r\n            if(activeTab===correctAnswer){\r\n                setState('correct')\r\n\r\n                responseProcessing('correct', point)\r\n\r\n            }\r\n            if(activeTab!==correctAnswer){\r\n                setState('wrong')\r\n                responseProcessing('wrong',point)\r\n            }\r\n        } else {\r\n            setLevelQuestion((levelQuestion)=>levelQuestion+1);\r\n            changeOfScene()\r\n            \r\n        }\r\n\r\n    }\r\n    function selectTab(i) {\r\n        if(state==='chose') {\r\n            setActiveTab(i);\r\n        }\r\n    }\r\n    function renderAnswer() {\r\n        return answer.map((item, i) => {\r\n            let active = (activeTab === i);\r\n            let correct = (correctAnswer === i);\r\n\r\n            return (\r\n            <Answer onClick={()=>selectTab(i)} correct={correct} state ={state} active={active}>\r\n                       <span><MathJax.Text text={ item }/></span>\r\n                   </Answer  >\r\n            )   \r\n        })\r\n    }\r\n\r\n    return (\r\n        (\r\n            <MathJax.Context\r\n            \r\n            \r\n            onError={ (MathJax, error) => {\r\n                console.warn(error);\r\n                console.log(\"Encountered a MathJax error, re-attempting a typeset!\");\r\n                MathJax.Hub.Queue(\r\n                  MathJax.Hub.Typeset()\r\n                );\r\n            } }\r\n            script=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML\"\r\n            options={ {\r\n                asciimath2jax: {\r\n                     useMathMLspacing: true,\r\n                     delimiters: [[\"$$\",\"$$\"]],\r\n                     preview: \"none\",\r\n                }\r\n            } }\r\n        >\r\n            <WrapQuestion>\r\n               <Question>\r\n                   <h2>Тема: {them}</h2>\r\n        <h2>Питання (балів {point}):  <MathJax.Text text={ question }/> </h2>\r\n               </Question>\r\n               <Answers>\r\n                    {renderAnswer()}\r\n                    <Button onClick={handleClick}>{state===\"chose\"?\"Ответить\":\"Дальше\"}</Button>\r\n               </Answers>\r\n            </WrapQuestion>\r\n        </MathJax.Context>\r\n            \r\n        )\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default QuestionPanel;","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\nconst jumps = keyframes`\r\n   0%,\r\n  60%,\r\n  75%,\r\n  90%,\r\n  to {\r\n    -webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\r\n    animation-timing-function: cubic-bezier(.215, .61, .355, 1)\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    -webkit-transform: translate(2000px, 0);\r\n    transform: translate(2000px, 0) ;\r\n  }\r\n\r\n\r\n\r\n  to {\r\n    -webkit-transform: translate(0);\r\n    transform: translate(0);\r\n  }\r\n`\r\n\r\nconst EggBlock = styled.div`\r\npadding: 2%;\r\nwidth: 100%;\r\nheight: 100%;\r\nanimation: ${jumps} 1s;\r\nborder: 1px solid rgba(0,0,0,0.2);\r\nborder-radius: 8px;\r\nbackground: rgba(0,0,0,0.3);\r\npadding: 5%;\r\nbox-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\ndisplay: flex;\r\nalign-items:center;\r\n\r\n`;\r\n\r\nfunction Egg({toogleEasterEgg}) {\r\n\r\n    return (\r\n        <EggBlock onClick={toogleEasterEgg}>\r\n            <h1>Здравствуй шукач. Тобі потрапила унікальна річ, можливість дізнатися на що ти здатний як маленький мислитель, а може і великий. Випробуй свої сили, раптом весь світ для тебе всього лише маленька ступінь, і ти здатний прогинати сам всесвіт під себе...</h1>\r\n        </EggBlock>\r\n    )\r\n}\r\n\r\nexport default Egg; ","import React, { useEffect, useState} from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport RightPanel from './RightPanel/RightPanel';\r\nimport Wheel from './Wheel/Wheel';\r\nimport Theme from './Theme/Theme';\r\nimport QuestionPanel from './QuestionPanel/QuestionPanel';\r\nimport Egg from './Egg/Egg';\r\n\r\nwindow.addEventListener(`resize`, event => {\r\n  const clientWidth = document.documentElement.clientWidth\r\n\r\n  document.documentElement.style.fontSize = clientWidth / 84 + 'px'\r\n});\r\n\r\nconst AppBlock = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: 1fr minmax(80px, 15%);\r\nheight: 100vh;\r\n`;\r\n\r\nconst jumps = keyframes`\r\n   0%,\r\n  60%,\r\n  75%,\r\n  90%,\r\n  to {\r\n    -webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\r\n    animation-timing-function: cubic-bezier(.215, .61, .355, 1)\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    -webkit-transform: translate3d(0, -3000px, 0) scaleY(3);\r\n    transform: translate3d(0, -3000px, 0) scaleY(3)\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    -webkit-transform: translate3d(0, 25px, 0) scaleY(.9);\r\n    transform: translate3d(0, 25px, 0) scaleY(.9)\r\n  }\r\n\r\n  75% {\r\n    -webkit-transform: translate3d(0, -10px, 0) scaleY(.95);\r\n    transform: translate3d(0, -10px, 0) scaleY(.95)\r\n  }\r\n\r\n  90% {\r\n    -webkit-transform: translate3d(0, 5px, 0) scaleY(.985);\r\n    transform: translate3d(0, 5px, 0) scaleY(.985)\r\n  }\r\n\r\n  to {\r\n    -webkit-transform: translateZ(0);\r\n    transform: translateZ(0)\r\n  }\r\n`\r\n\r\nconst Main = styled.div`\r\npadding: 2%;\r\ndisplay:grid;\r\ngrid-template-columns: minmax(100px, 25%) 1fr;\r\nheight: 100%;\r\nanimation: ${jumps} 1s;\r\n\r\n`;\r\n\r\n\r\n\r\n\r\nfunction App({db}) {\r\n\r\n\r\n\r\n  const  offset = 360/db.length;\r\n  const [rotate, setRotate] = useState(-offset/2)\r\n  const [select, setSelect] = useState(0)\r\n\r\n  const [leftSideStatus,setLeftSideStatus] = useState('wheel')\r\n\r\n  const [score, setScore] = useState(0)\r\n  const [attempts, setAttempts] = useState(db[select].questions.length)\r\n  const [wasRotate, setWasRotate] = useState(false)\r\n  const [levelQuestion, setLevelQuestion] = useState(0)\r\n\r\n\r\n  const [animated, setAnimated] = useState(false)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    let s = Math.round(-((rotate+offset/2)%360)/(offset))\r\n    if(s === 8) {\r\n        s = 0\r\n    }\r\n    setSelect(s)\r\n  },[rotate])\r\n  \r\n  function animationRotate( ) {\r\n    setAnimated(true)\r\n    let der = 2000 + Math.floor(3000* Math.random());\r\n    const turn = 1000 + Math.floor(3000* Math.random());\r\n     der =turn*2\r\n    let start = null,\r\n        turnDifference = 0;\r\n    function animation(time) {\r\n      if (!start){\r\n        start = time;\r\n      }\r\n      let passed =  time - start ,\r\n      lineProgress = passed/der;\r\n      const progres = lineProgress +  lineProgress**2*(1-lineProgress);\r\n\r\n      setRotate((rotate)=>rotate - (Math.floor( progres*turn) - turnDifference) );\r\n      turnDifference =  Math.floor( progres*turn)\r\n\r\n      if(passed <= der) {\r\n          requestAnimationFrame(animation)\r\n      } else{\r\n        start = null;\r\n        setWasRotate(true)\r\n        setAnimated(false)\r\n      }\r\n    }\r\n    requestAnimationFrame(animation)\r\n  } \r\n\r\n  function handleClickWheel(e) {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    if(wasRotate) {\r\n      if(levelQuestion<db[select].questions.length){\r\n        changeOfScene()\r\n      }\r\n      setWasRotate(false)\r\n    } else {\r\n      if(!animated) {\r\n        animationRotate();\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  function responseProcessing(stateResponse, point){\r\n      if(stateResponse === 'correct') {\r\n        setScore((score)=>score+point)\r\n        setAttempts((attempts)=>attempts-1)\r\n      } else if(stateResponse === 'wrong') {\r\n        setAttempts((attempts)=>attempts-1)\r\n      }\r\n      \r\n  }\r\n  function changeOfScene() {\r\n    setLeftSideStatus(leftSideStatus=> {\r\n      if(leftSideStatus ==='wheel'){ \r\n        return 'question'\r\n      } else if(leftSideStatus ==='question') {\r\n        return 'wheel'\r\n      }\r\n    })\r\n  }\r\n  function toogleEasterEgg(){\r\n    setLeftSideStatus(leftSideStatus=> {\r\n      if(leftSideStatus ==='wheel'){ \r\n        return 'easterEgg'\r\n      } else if(leftSideStatus ==='easterEgg') {\r\n        return 'wheel'\r\n      }\r\n    })\r\n  }\r\n  \r\n  const MainPanel = (\r\n      <Main>\r\n        <Theme db={db} select={select}/>\r\n        <Wheel \r\n            handleClickWheel = {handleClickWheel} \r\n            db={db} rotate={rotate} \r\n            offset={offset}\r\n\r\n            />\r\n      </Main>\r\n  )\r\n\r\n\r\n  const leftSide = leftSideStatus === 'easterEgg'? \r\n    <Egg toogleEasterEgg = {toogleEasterEgg}/> : \r\n    leftSideStatus === 'wheel'? \r\n    MainPanel:\r\n    <QuestionPanel \r\n      selectThem ={db[select]}\r\n      responseProcessing={responseProcessing}\r\n      changeOfScene={changeOfScene}\r\n      levelQuestion={levelQuestion}\r\n      setLevelQuestion={setLevelQuestion}/>;\r\n\r\n\r\n  return (\r\n    <AppBlock>\r\n      <div>{leftSide}</div>\r\n      <RightPanel \r\n        score={score}\r\n        attempts={attempts}\r\n        questions = {db[select].questions}\r\n        toogleEasterEgg={toogleEasterEgg}/>\r\n    </AppBlock>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default App;","import React, { useEffect, useState} from 'react';\r\nimport {getData} from '../services/requests';\r\nimport App from './App';\r\n\r\n\r\nfunction AppWithDb() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [db, setDb] = useState(true);\r\n    useEffect(()=>{\r\n        getData(process.env.PUBLIC_URL\r\n            +'/db.json')\r\n            .then((res)=> {\r\n                setDb(res);\r\n                setLoading(false);\r\n            })\r\n            .catch((e)=> console.error(e));\r\n    },[]);\r\n\r\n    if(loading) {\r\n        return null;\r\n    } else {\r\n        return <App db={db} />\r\n    }\r\n\r\n}\r\n\r\nexport default AppWithDb;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWithDb from './components/AppWithDb';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWithDb />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}